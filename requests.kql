"let TargetServiceTreeId = ""494d48a3-9782-48f2-b33f-2c86c9932c68"";#(lf)// Workplace Analytics Insights#(lf)let Subscriptions = ()#(lf){#(lf)    TorusServiceTreeSubscription#(lf)    | extend SubscriptionName = Name#(lf)    | where LogTime > ago(7d)#(lf)    | where ServiceId == TargetServiceTreeId#(lf)    | summarize take_any(*) by SubscriptionId, SubscriptionName#(lf)    | project SubscriptionId, SubscriptionName#(lf)};#(lf)Subscriptions#(lf)| join kind=inner#(lf)(#(lf)    TorusLockboxRequests#(lf)    | extend CreateTimeUTC = todatetime(CreateTime), ApprovalDecisionTimeUTC = todatetime(ApprovalDecisionTimeUTC)#(lf)    | where todatetime(CreateTime) > startofmonth(ago(180d))#(lf)    | extend#(lf)       ActualApprover = trim_start(""Request-AzureResourceRoleElevation.ps1-"", ActualApprover)#(lf)    | extend ParsedColumn = replace_regex(ActionParams, @""__DQUOTE__"", @'""')#(lf)    | extend ParsedColumn = replace_regex(ParsedColumn, @""__COMMA__"", @"","")#(lf)    | extend ActionParams = parse_json(ParsedColumn)#(lf)    | extend#(lf)        SubscriptionId = tostring(ActionParams[""SubscriptionId""]),#(lf)        ResourceGroup = tostring(ActionParams[""ResourceGroup""]),#(lf)        Resource = tostring(ActionParams[""Resource""]),#(lf)        TorusTeam = ActionParams[""TorusTeam""],#(lf)        PendingApprovalMinutes = datetime_diff('minute', ApprovalDecisionTimeUTC, CreateTimeUTC),#(lf)        Scope = iif(isnotnull(ActionParams[""Resource""]), ""Resource"", iif(isnotnull(ActionParams[""ResourceGroup""]), ""ResourceGroup"", ""Subscription"")),#(lf)        IsUserOCE = ActionParams[""IsUserOCE""]#(lf)    | where OperationName == ""Request-AzureResourceRoleElevation.ps1""#(lf)    | summarize take_any(*) by RequestId#(lf))#(lf)on SubscriptionId#(lf)    | project#(lf)        CreateTimeUTC, Requestor, ActualApprover, Scope, SubscriptionId, SubscriptionName, ResourceGroup, Resource, Role, Reason, IsUserOCE,#(lf)        ApprovalStatus, ApprovalActions, ApprovalDecisionTimeUTC, PendingApprovalMinutes, ActionParams#(lf)    | extend ICM_Number = tostring(extract(@""(\d{9})"", 1, Reason))#(lf)    | extend ICM_Number_Long = tostring(extract(@""(\d{14})"", 1, Reason))#(lf)    | extend IcmId = iff(isnotempty( ICM_Number_Long), ICM_Number_Long, iff(isnotempty(ICM_Number), ICM_Number, ICM_Number))#(lf)    | extend hasICM = iff(isnotempty(IcmId) and Reason like ""icm"", TRUE, FALSE)